{
  "entities": {
    "Client": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Client",
      "type": "object",
      "description": "Represents a client in the consórcio and crédito system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Client entity."
        },
        "firstName": {
          "type": "string",
          "description": "Client's first name."
        },
        "lastName": {
          "type": "string",
          "description": "Client's last name."
        },
        "email": {
          "type": "string",
          "description": "Client's email address.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "Client's phone number."
        },
        "quizId": {
          "type": "string",
          "description": "Reference to Quiz. (Relationship: Client 1:1 Quiz)"
        },
        "status": {
          "type": "string",
          "description": "Status of the client (e.g., New, In Analysis, Approved)."
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "email",
        "phone"
      ]
    },
    "Quiz": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Quiz",
      "type": "object",
      "description": "Represents a quiz or form filled by a client.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Quiz entity."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to Client. (Relationship: Client 1:1 Quiz)"
        },
        "questions": {
          "type": "array",
          "description": "Questions included in the quiz",
          "items": {
            "type": "string"
          }
        },
        "answers": {
          "type": "array",
          "description": "Answers provided for the quiz",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a consórcio or crédito product.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Product entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the product."
        },
        "type": {
          "type": "string",
          "description": "Type of product (e.g., consórcio, crédito)."
        },
        "rate": {
          "type": "number",
          "description": "Interest rate or fee associated with the product."
        },
        "minAmount": {
          "type": "number",
          "description": "Minimum loan or credit amount."
        },
        "maxAmount": {
          "type": "number",
          "description": "Maximum loan or credit amount."
        }
      },
      "required": [
        "id",
        "name",
        "type"
      ]
    },
    "Bank": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Bank",
      "type": "object",
      "description": "Represents a financial institution or partner bank.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Bank entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the bank."
        },
        "commissionRate": {
          "type": "number",
          "description": "Commission rate for products sold through this bank."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Sale": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Sale",
      "type": "object",
      "description": "Represents a sale or proposal.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Sale entity."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to Client. (Relationship: Client 1:N Sale)"
        },
        "productId": {
          "type": "string",
          "description": "Reference to Product. (Relationship: Product 1:N Sale)"
        },
        "bankId": {
          "type": "string",
          "description": "Reference to Bank. (Relationship: Bank 1:N Sale)"
        },
        "status": {
          "type": "string",
          "description": "Status of the sale (e.g., Open, Finalized)."
        },
        "salesPersonId": {
          "type": "string",
          "description": "Reference to SalesPerson. (Relationship: SalesPerson 1:N Sale)"
        }
      },
      "required": [
        "id",
        "clientId",
        "productId"
      ]
    },
    "Commission": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Commission",
      "type": "object",
      "description": "Represents a commission earned on a sale.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Commission entity."
        },
        "saleId": {
          "type": "string",
          "description": "Reference to Sale. (Relationship: Sale 1:1 Commission)"
        },
        "amount": {
          "type": "number",
          "description": "Amount of the commission."
        },
        "status": {
          "type": "string",
          "description": "Status of the commission (e.g., Paid, Payable)."
        }
      },
      "required": [
        "id",
        "saleId",
        "amount"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "username": {
          "type": "string",
          "description": "User's username."
        },
        "role": {
          "type": "string",
          "description": "User's role (e.g., Admin, Gestor)."
        }
      },
      "required": [
        "id",
        "username",
        "role"
      ]
    },
    "Document": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Document",
      "type": "object",
      "description": "Represents a document uploaded by a client.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Document entity."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to Client. (Relationship: Client 1:N Document)"
        },
        "filename": {
          "type": "string",
          "description": "Name of the document file."
        },
        "url": {
          "type": "string",
          "description": "URL where the document is stored.",
          "format": "uri"
        },
        "uploadDate": {
          "type": "string",
          "description": "Date when the document was uploaded.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "clientId",
        "filename",
        "url"
      ]
    },
    "SalesPerson": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SalesPerson",
      "type": "object",
      "description": "Represents a salesperson in the system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the SalesPerson entity."
        },
        "firstName": {
          "type": "string",
          "description": "Salesperson's first name."
        },
        "lastName": {
          "type": "string",
          "description": "Salesperson's last name."
        },
        "email": {
          "type": "string",
          "description": "Salesperson's email address.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "Salesperson's phone number."
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "email",
        "phone"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/clients/{clientId}",
        "definition": {
          "entityName": "Client",
          "schema": {
            "$ref": "#/backend/entities/Client"
          },
          "description": "Stores client data.",
          "params": [
            {
              "name": "clientId",
              "description": "The unique identifier for the client."
            }
          ]
        }
      },
      {
        "path": "/quizzes/{quizId}",
        "definition": {
          "entityName": "Quiz",
          "schema": {
            "$ref": "#/backend/entities/Quiz"
          },
          "description": "Stores quiz data.",
          "params": [
            {
              "name": "quizId",
              "description": "The unique identifier for the quiz."
            }
          ]
        }
      },
      {
        "path": "/products/{productId}",
        "definition": {
          "entityName": "Product",
          "schema": {
            "$ref": "#/backend/entities/Product"
          },
          "description": "Stores product information.",
          "params": [
            {
              "name": "productId",
              "description": "The unique identifier for the product."
            }
          ]
        }
      },
      {
        "path": "/banks/{bankId}",
        "definition": {
          "entityName": "Bank",
          "schema": {
            "$ref": "#/backend/entities/Bank"
          },
          "description": "Stores bank information.",
          "params": [
            {
              "name": "bankId",
              "description": "The unique identifier for the bank."
            }
          ]
        }
      },
      {
        "path": "/sales/{saleId}",
        "definition": {
          "entityName": "Sale",
          "schema": {
            "$ref": "#/backend/entities/Sale"
          },
          "description": "Stores sale information.",
          "params": [
            {
              "name": "saleId",
              "description": "The unique identifier for the sale."
            }
          ]
        }
      },
      {
        "path": "/commissions/{commissionId}",
        "definition": {
          "entityName": "Commission",
          "schema": {
            "$ref": "#/backend/entities/Commission"
          },
          "description": "Stores commission information.",
          "params": [
            {
              "name": "commissionId",
              "description": "The unique identifier for the commission."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user information.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/clients/{clientId}/documents/{documentId}",
        "definition": {
          "entityName": "Document",
          "schema": {
            "$ref": "#/backend/entities/Document"
          },
          "description": "Stores documents uploaded by a client. Ownership is path-based.",
          "params": [
            {
              "name": "clientId",
              "description": "The unique identifier for the client."
            },
            {
              "name": "documentId",
              "description": "The unique identifier for the document."
            }
          ]
        }
      },
      {
        "path": "/salesPeople/{salesPersonId}",
        "definition": {
          "entityName": "SalesPerson",
          "schema": {
            "$ref": "#/backend/entities/SalesPerson"
          },
          "description": "Stores salesperson information.",
          "params": [
            {
              "name": "salesPersonId",
              "description": "The unique identifier for the sales person."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support a consórcio and crédito system, focusing on clear authorization, scalability, and debuggability.  Authorization Independence is achieved through path-based ownership for user-related data and denormalization of group membership data. All lists are secured.  Specifically:\n\n*   **Clients:** Clients are stored under a top-level `/clients` collection. Since the application requires an internal CRM with potentially sensitive client data, direct path-based ownership is not employed.  This allows better list operations within the CRM.\n*   **Quizzes:** Quizzes related to a client are stored under `/quizzes/{quizId}` collection. This allows to query all quizzes, if necessary.\n*   **Products and Banks:** Products and Banks are global entities and stored in top-level collections `/products` and `/banks`.\n*   **Sales:** Sales are stored under the top-level `/sales` collection.\n*   **Commissions:** Commissions are stored under the `/commissions` collection.\n*   **Users:** User data, including roles, is stored in the `/users/{userId}` collection, enabling secure role-based access control using `request.auth.uid`.\n*   **Documents:** Documents are stored under the `/clients/{clientId}/documents/{documentId}` collection.  This provides a clear ownership structure.\n*   **SalesPeople:** Sales people are stored under the `/salesPeople/{salesPersonId}` collection.\n\nThis structure facilitates QAPs (Rules Are Not Filters) by ensuring all documents within a collection have similar security requirements, enabling secure `list` operations.  The structure uses denormalization where needed, to avoid `get()` calls in rules."
  }
}