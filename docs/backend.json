{
  "entities": {
    "AdminDashboard": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AdminDashboard",
      "type": "object",
      "description": "Represents the administrative dashboard with key performance indicators and alerts.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the AdminDashboard entity."
        },
        "totalProposals": {
          "type": "number",
          "description": "Total number of proposals in the system."
        },
        "approvedProposals": {
          "type": "number",
          "description": "Number of proposals that have been approved."
        },
        "totalCommissions": {
          "type": "number",
          "description": "Total amount of commissions generated."
        },
        "pendingProposals": {
          "type": "number",
          "description": "Number of proposals currently pending analysis."
        },
        "reportUrl": {
          "type": "string",
          "description": "URL for accessing exportable reports.",
          "format": "uri"
        }
      },
      "required": [
        "id"
      ]
    },
    "Client": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Client",
      "type": "object",
      "description": "Represents a client in the CRM system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Client entity."
        },
        "firstName": {
          "type": "string",
          "description": "Client's first name."
        },
        "lastName": {
          "type": "string",
          "description": "Client's last name."
        },
        "email": {
          "type": "string",
          "description": "Client's email address.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "Client's phone number."
        },
        "quizId": {
          "type": "string",
          "description": "Reference to Quiz. (Relationship: Client 1:1 Quiz)"
        },
        "status": {
          "type": "string",
          "description": "Client's status (New, In Analysis, Pending, Approved, Rejected)."
        },
        "interactionHistory": {
          "type": "array",
          "description": "History of interactions with the client.",
          "items": {
            "type": "string"
          }
        },
        "documentIds": {
          "type": "array",
          "description": "References to Documents. (Relationship: Client 1:N Document)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "email",
        "phone"
      ]
    },
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a product (Consórcio or Crédito).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Product entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the product."
        },
        "rate": {
          "type": "number",
          "description": "Interest rate for the product."
        },
        "term": {
          "type": "number",
          "description": "Term (in months) for the product."
        },
        "minValue": {
          "type": "number",
          "description": "Minimum value for the product."
        },
        "maxValue": {
          "type": "number",
          "description": "Maximum value for the product."
        }
      },
      "required": [
        "id",
        "name",
        "rate",
        "term",
        "minValue",
        "maxValue"
      ]
    },
    "Bank": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Bank",
      "type": "object",
      "description": "Represents a financial institution or partner bank.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Bank entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the bank."
        },
        "commission": {
          "type": "number",
          "description": "Commission percentage offered by the bank."
        },
        "contractHistory": {
          "type": "array",
          "description": "History of contracts signed with the bank.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "commission"
      ]
    },
    "Sale": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Sale",
      "type": "object",
      "description": "Represents a sale or proposal.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Sale entity."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to Client. (Relationship: Client 1:N Sale)"
        },
        "productId": {
          "type": "string",
          "description": "Reference to Product. (Relationship: Product 1:N Sale)"
        },
        "status": {
          "type": "string",
          "description": "Status of the sale (Open, In Negotiation, Finalized, Cancelled)."
        },
        "proposalLink": {
          "type": "string",
          "description": "Link to the generated proposal.",
          "format": "uri"
        },
        "contractId": {
          "type": "string",
          "description": "Reference to Contract. (Relationship: Sale 1:1 Contract)"
        }
      },
      "required": [
        "id",
        "clientId",
        "productId",
        "status"
      ]
    },
    "FinancialReport": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "FinancialReport",
      "type": "object",
      "description": "Represents a financial report for commissions.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the FinancialReport entity."
        },
        "commissionPaid": {
          "type": "number",
          "description": "Total amount of commissions paid."
        },
        "commissionPayable": {
          "type": "number",
          "description": "Total amount of commissions payable."
        },
        "commissionReceived": {
          "type": "number",
          "description": "Total amount of commissions received."
        },
        "reportDate": {
          "type": "string",
          "description": "Date the report was generated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "commissionPaid",
        "commissionPayable",
        "commissionReceived",
        "reportDate"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the system (Admin, Gestor, Atendente, Financeiro).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "username": {
          "type": "string",
          "description": "User's username."
        },
        "role": {
          "type": "string",
          "description": "User's role (Admin, Gestor, Atendente, Financeiro)."
        },
        "permissions": {
          "type": "array",
          "description": "List of permissions granted to the user.",
          "items": {
            "type": "string"
          }
        },
        "email": {
          "type": "string",
          "description": "User's email.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "username",
        "role",
        "email"
      ]
    },
    "Quiz": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Quiz",
      "type": "object",
      "description": "Represents a quiz or questionnaire for clients.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Quiz entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the quiz."
        },
        "questions": {
          "type": "array",
          "description": "List of questions in the quiz.",
          "items": {
            "type": "string"
          }
        },
        "active": {
          "type": "boolean",
          "description": "Indicates if the quiz is currently active."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Document": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Document",
      "type": "object",
      "description": "Represents a document uploaded by a client (RG, CNH, etc.).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Document entity."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to Client. (Relationship: Client 1:N Document)"
        },
        "filename": {
          "type": "string",
          "description": "Name of the uploaded file."
        },
        "fileType": {
          "type": "string",
          "description": "Type of the uploaded file (e.g., PDF, JPG)."
        },
        "uploadDate": {
          "type": "string",
          "description": "Date the document was uploaded.",
          "format": "date-time"
        },
        "fileUrl": {
          "type": "string",
          "description": "URL where the document can be accessed.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "clientId",
        "filename",
        "fileType",
        "uploadDate",
        "fileUrl"
      ]
    },
    "Contract": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Contract",
      "type": "object",
      "description": "Represents a contract associated with a sale.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Contract entity."
        },
        "saleId": {
          "type": "string",
          "description": "Reference to Sale. (Relationship: Sale 1:1 Contract)"
        },
        "signatureDate": {
          "type": "string",
          "description": "Date the contract was signed.",
          "format": "date-time"
        },
        "contractDetails": {
          "type": "string",
          "description": "Details of the contract."
        },
        "signedContractUrl": {
          "type": "string",
          "description": "URL to the signed contract document.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "saleId",
        "signatureDate",
        "contractDetails",
        "signedContractUrl"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/admin_dashboards/{adminDashboardId}",
        "definition": {
          "entityName": "AdminDashboard",
          "schema": {
            "$ref": "#/backend/entities/AdminDashboard"
          },
          "description": "Stores administrative dashboard data. Accessible only to admin users.",
          "params": [
            {
              "name": "adminDashboardId",
              "description": "Unique identifier for the admin dashboard."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. Accessible only to the user and admins.",
          "params": [
            {
              "name": "userId",
              "description": "Unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/sales/{saleId}",
        "definition": {
          "entityName": "Sale",
          "schema": {
            "$ref": "#/backend/entities/Sale"
          },
          "description": "Stores sales data associated with a specific user. Only the user and admins can access.",
          "params": [
            {
              "name": "userId",
              "description": "Unique identifier for the user."
            },
            {
              "name": "saleId",
              "description": "Unique identifier for the sale."
            }
          ]
        }
      },
      {
        "path": "/clients/{clientId}",
        "definition": {
          "entityName": "Client",
          "schema": {
            "$ref": "#/backend/entities/Client"
          },
          "description": "Stores client information. Accessible to admins and users with appropriate permissions.",
          "params": [
            {
              "name": "clientId",
              "description": "Unique identifier for the client."
            }
          ]
        }
      },
      {
        "path": "/clients/{clientId}/documents/{documentId}",
        "definition": {
          "entityName": "Document",
          "schema": {
            "$ref": "#/backend/entities/Document"
          },
          "description": "Stores documents associated with a client. Includes denormalized 'clientId' for authorization independence.  Accessible to the client and authorized personnel.",
          "params": [
            {
              "name": "clientId",
              "description": "Unique identifier for the client."
            },
            {
              "name": "documentId",
              "description": "Unique identifier for the document."
            }
          ]
        }
      },
      {
        "path": "/products/{productId}",
        "definition": {
          "entityName": "Product",
          "schema": {
            "$ref": "#/backend/entities/Product"
          },
          "description": "Stores product information (Consórcio and Crédito). Accessible to all users for viewing, but creation/modification is restricted to admins.",
          "params": [
            {
              "name": "productId",
              "description": "Unique identifier for the product."
            }
          ]
        }
      },
      {
        "path": "/banks/{bankId}",
        "definition": {
          "entityName": "Bank",
          "schema": {
            "$ref": "#/backend/entities/Bank"
          },
          "description": "Stores bank and partner information.  Accessible to admins and authorized personnel.",
          "params": [
            {
              "name": "bankId",
              "description": "Unique identifier for the bank."
            }
          ]
        }
      },
      {
        "path": "/contracts/{contractId}",
        "definition": {
          "entityName": "Contract",
          "schema": {
            "$ref": "#/backend/entities/Contract"
          },
          "description": "Stores contract information.  Accessible to admins and users involved in the sale.",
          "params": [
            {
              "name": "contractId",
              "description": "Unique identifier for the contract."
            }
          ]
        }
      },
      {
        "path": "/financial_reports/{financialReportId}",
        "definition": {
          "entityName": "FinancialReport",
          "schema": {
            "$ref": "#/backend/entities/FinancialReport"
          },
          "description": "Stores financial report data. Accessible only to users with the 'Financeiro' role and admins.",
          "params": [
            {
              "name": "financialReportId",
              "description": "Unique identifier for the financial report."
            }
          ]
        }
      },
      {
        "path": "/quizzes/{quizId}",
        "definition": {
          "entityName": "Quiz",
          "schema": {
            "$ref": "#/backend/entities/Quiz"
          },
          "description": "Stores quiz and questionnaire data.  Accessible for listing to users. Creation/modification restricted to Admins",
          "params": [
            {
              "name": "quizId",
              "description": "Unique identifier for the quiz."
            }
          ]
        }
      },
      {
        "path": "/roles_admin/{userId}",
        "definition": {
          "entityName": "roles_admin",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Documents in this collection denote admin privileges. Existence of a document for a user ID grants admin access. Content of the document is not relevant.",
          "params": [
            {
              "name": "userId",
              "description": "Unique identifier for the user."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore data structure is designed to support the ConsorciaTech application's features, focusing on security, scalability, and maintainability. The structure adheres to the principles of Authorization Independence, Clarity of Intent, DBAC (Database-Based Access Control), and QAPs (Rules are Not Filters).\n\n**Authorization Independence:**\nAuthorization independence is achieved through denormalization. For example, the `clients/{clientId}/documents/{documentId}` collection requires that the client's ID (`clientId`) be present in each document to ensure that the security rules can validate a user's access to the documents without needing to perform a `get()` operation on the client document.\n\n**Structural Segregation:**\nWe segregate data based on access requirements. For example, user profiles are stored under `/users/{userId}`, providing a clear path-based ownership model. Admin-related data, like the admin dashboard, is stored in a dedicated `/admin_dashboards` collection, allowing specific rules to govern access without affecting other collections.\n\n**Access Modeling:**\nPath-based ownership is used for user-owned data (e.g., `/users/{userId}/sales/{saleId}`). The membership map approach is not heavily used as the primary access control mechanism, but can be considered for collaborative scenarios if they arise in the future. For global roles, the design utilizes a dedicated collection (`/roles_admin/{uid}`) to manage admin privileges.\n\n**QAPs (Rules are not Filters):**\nTo support secure `list` operations (QAPs), the data structure avoids mixing data with different access needs in the same collection.  For example, `quizzes` are stored in the root collection `/quizzes`, accessible for listing by users with appropriate permissions. Security rules will ensure that only authorized users can access sensitive data within these collections.\n\n**Data Clarity and Predictability:**\nExplicit state modeling is employed using `status` fields in entities like `Client` and `Sale`. Standard naming conventions are used throughout, enhancing clarity and maintainability. Wildcards are descriptive (e.g., `{clientId}` instead of `{id}`).\n"
  }
}