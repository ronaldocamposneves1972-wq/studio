
{
  "entities": {
    "Consortium": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Consortium",
      "type": "object",
      "description": "Represents a consortium product with specific terms and conditions.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the consortium."
        },
        "name": {
          "type": "string",
          "description": "Name of the consortium."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the consortium."
        },
        "interestRate": {
          "type": "number",
          "description": "Interest rate applied to the consortium."
        },
        "termMonths": {
          "type": "number",
          "description": "Duration of the consortium in months."
        },
        "minValue": {
          "type": "number",
          "description": "Minimum value for the consortium."
        },
        "maxValue": {
          "type": "number",
          "description": "Maximum value for the consortium."
        },
        "commissionRate": {
          "type": "number",
          "description": "Commission rate for the product."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "interestRate",
        "termMonths",
        "minValue",
        "maxValue",
        "commissionRate"
      ]
    },
    "CreditProduct": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CreditProduct",
      "type": "object",
      "description": "Represents a credit product offered.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the credit product."
        },
        "name": {
          "type": "string",
          "description": "Name of the credit product."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the credit product."
        },
        "interestRate": {
          "type": "number",
          "description": "Interest rate applied to the credit product."
        },
        "termMonths": {
          "type": "number",
          "description": "Duration of the credit product in months."
        },
        "minValue": {
          "type": "number",
          "description": "Minimum value for the credit product."
        },
        "maxValue": {
          "type": "number",
          "description": "Maximum value for the credit product."
        },
        "commissionRate": {
          "type": "number",
          "description": "Commission rate for the product."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "interestRate",
        "termMonths",
        "minValue",
        "maxValue",
        "commissionRate"
      ]
    },
    "ProductCombo": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ProductCombo",
      "type": "object",
      "description": "Represents a combination of products (Consortium and/or Credit).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the product combo."
        },
        "name": {
          "type": "string",
          "description": "Name of the product combo."
        },
        "description": {
          "type": "string",
          "description": "Description of the product combo."
        },
        "productIds": {
          "type": "array",
          "description": "References to Products (Consortium or Credit). (Relationship: ProductCombo N:N Product)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "productIds"
      ]
    },
    "FinancialInstitution": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "FinancialInstitution",
      "type": "object",
      "description": "Represents a financial institution or partner.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the financial institution."
        },
        "name": {
          "type": "string",
          "description": "Name of the financial institution."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Client": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Client",
      "type": "object",
      "description": "Represents a client in the system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the client."
        },
        "firstName": {
          "type": "string",
          "description": "First name of the client."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the client."
        },
        "email": {
          "type": "string",
          "description": "Email address of the client.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the client."
        },
        "status": {
          "type": "string",
          "description": "Status of the client (New, In Analysis, Pending, Approved, Rejected)."
        },
        "quizId": {
          "type": "string",
          "description": "Reference to a Quiz. (Relationship: Client 1:1 Quiz)"
        },
        "salesOrders": {
          "type": "array",
          "description": "Summary of sales orders for this client.",
          "items": {
            "$ref": "#/backend/entities/SalesOrderSummary"
          }
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "email",
        "phone",
        "status"
      ]
    },
    "Quiz": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Quiz",
      "type": "object",
      "description": "Represents a quiz for gathering client information.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the quiz."
        },
        "slug": {
          "type": "string",
          "description": "A URL-friendly identifier for the quiz."
        },
        "questions": {
          "type": "array",
          "description": "Array of question objects.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "questions"
      ]
    },
    "Question": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Question",
      "type": "object",
      "description": "Represents a question in a quiz.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the question."
        },
        "text": {
          "type": "string",
          "description": "The text of the question."
        },
        "type": {
          "type": "string",
          "description": "The type of question (e.g., multiple choice, text)."
        },
        "options": {
          "type": "array",
          "description": "The options for the question. Only applicable to multiple choice questions.",
          "items": {
            "type": "string"
          }
        },
        "required": {
          "type": "boolean",
          "description": "Whether the question is required."
        }
      },
      "required": [
        "id",
        "text",
        "type",
        "required"
      ]
    },
    "SalesProposal": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SalesProposal",
      "type": "object",
      "description": "Represents a sales proposal.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the sales proposal."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to the Client. (Relationship: Client 1:N SalesProposal)"
        },
        "productId": {
          "type": "string",
          "description": "Reference to the Product (Consortium or Credit). (Relationship: Product 1:N SalesProposal)"
        },
        "dateCreated": {
          "type": "string",
          "description": "Date the proposal was created.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Status of the proposal (Open, In Negotiation, Finalized, Cancelled)."
        }
      },
      "required": [
        "id",
        "clientId",
        "productId",
        "dateCreated",
        "status"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "username": {
          "type": "string",
          "description": "Username of the user."
        },
        "role": {
          "type": "string",
          "description": "Role of the user (Admin, Gestor, Atendente, Financeiro)."
        }
      },
      "required": [
        "id",
        "username",
        "role"
      ]
    },
    "Commission": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Commission",
      "type": "object",
      "description": "Represents a commission earned on a sale.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the commission."
        },
        "salesProposalId": {
          "type": "string",
          "description": "Reference to the SalesProposal. (Relationship: SalesProposal 1:N Commission)"
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User (salesperson). (Relationship: User 1:N Commission)"
        },
        "amount": {
          "type": "number",
          "description": "Amount of the commission."
        },
        "status": {
          "type": "string",
          "description": "Status of the commission (Paid, Payable, Received)."
        },
        "financialInstitutionId": {
          "type": "string",
          "description": "Reference to the FinancialInstitution. (Relationship: FinancialInstitution 1:N Commission)"
        }
      },
      "required": [
        "id",
        "salesProposalId",
        "userId",
        "amount",
        "status"
      ]
    },
    "Document": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Document",
      "type": "object",
      "description": "Represents a document uploaded by a client.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the document."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to the Client. (Relationship: Client 1:N Document)"
        },
        "type": {
          "type": "string",
          "description": "Type of document (RG, CNH, Proof of Residence, Proof of Income)."
        },
        "url": {
          "type": "string",
          "description": "URL of the uploaded document."
        }
      },
      "required": [
        "id",
        "clientId",
        "type",
        "url"
      ]
    },
    "SalesOrderItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SalesOrderItem",
      "type": "object",
      "description": "Represents a single item within a sales order.",
      "properties": {
        "productId": {
          "type": "string",
          "description": "Reference to the product."
        },
        "productName": {
          "type": "string",
          "description": "Denormalized name of the product."
        },
        "value": {
          "type": "number",
          "description": "The value of this item."
        }
      },
      "required": ["productId", "productName", "value"]
    },
    "SalesOrder": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SalesOrder",
      "type": "object",
      "description": "Represents a sales order containing items like insurance, commission, etc.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the sales order."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to the client."
        },
        "clientName": {
          "type": "string",
          "description": "Denormalized name of the client."
        },
        "salesRepId": {
          "type": "string",
          "description": "Reference to the sales representative (user)."
        },
        "salesRepName": {
          "type": "string",
          "description": "Denormalized name of the sales representative."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of when the order was created."
        },
        "dueDate": {
          "type": "string",
          "format": "date",
          "description": "Due date for the payment of this sales order."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/backend/entities/SalesOrderItem"
          }
        },
        "totalValue": {
          "type": "number",
          "description": "The total value of all items in the order."
        }
      },
      "required": ["id", "clientId", "clientName", "salesRepId", "salesRepName", "createdAt", "dueDate", "items", "totalValue"]
    },
    "SalesOrderSummary": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SalesOrderSummary",
      "type": "object",
      "description": "A summarized version of a sales order for denormalization.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the sales order."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of when the order was created."
        },
        "dueDate": {
          "type": "string",
          "format": "date",
          "description": "Due date for the payment of this sales order."
        },
        "totalValue": {
          "type": "number",
          "description": "The total value of the order."
        },
        "itemCount": {
          "type": "number",
          "description": "Number of items in the order."
        }
      },
      "required": ["id", "createdAt", "totalValue", "itemCount", "dueDate"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user data. Path-based ownership for user data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/roles_admin/{userId}",
        "definition": {
          "entityName": "AdminRole",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Document existence determines admin role. Existence over Content. Authorization using /roles_admin/{uid}.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/clients/{clientId}",
        "definition": {
          "entityName": "Client",
          "schema": {
            "$ref": "#/backend/entities/Client"
          },
          "description": "Stores client information.",
          "params": [
            {
              "name": "clientId",
              "description": "The unique identifier of the client."
            }
          ]
        }
      },
      {
        "path": "/clients/{clientId}/documents/{documentId}",
        "definition": {
          "entityName": "Document",
          "schema": {
            "$ref": "#/backend/entities/Document"
          },
          "description": "Stores documents uploaded by clients.  Path-based ownership under client.",
          "params": [
            {
              "name": "clientId",
              "description": "The unique identifier of the client."
            },
            {
              "name": "documentId",
              "description": "The unique identifier of the document."
            }
          ]
        }
      },
      {
        "path": "/financial_institutions/{financialInstitutionId}",
        "definition": {
          "entityName": "FinancialInstitution",
          "schema": {
            "$ref": "#/backend/entities/FinancialInstitution"
          },
          "description": "Stores financial institution data.",
          "params": [
            {
              "name": "financialInstitutionId",
              "description": "The unique identifier of the financial institution."
            }
          ]
        }
      },
      {
        "path": "/consortiums/{consortiumId}",
        "definition": {
          "entityName": "Consortium",
          "schema": {
            "$ref": "#/backend/entities/Consortium"
          },
          "description": "Stores consortium product data.",
          "params": [
            {
              "name": "consortiumId",
              "description": "The unique identifier of the consortium product."
            }
          ]
        }
      },
      {
        "path": "/credit_products/{creditProductId}",
        "definition": {
          "entityName": "CreditProduct",
          "schema": {
            "$ref": "#/backend/entities/CreditProduct"
          },
          "description": "Stores credit product data.",
          "params": [
            {
              "name": "creditProductId",
              "description": "The unique identifier of the credit product."
            }
          ]
        }
      },
      {
        "path": "/product_combos/{productComboId}",
        "definition": {
          "entityName": "ProductCombo",
          "schema": {
            "$ref": "#/backend/entities/ProductCombo"
          },
          "description": "Stores product combo data.",
          "params": [
            {
              "name": "productComboId",
              "description": "The unique identifier of the product combo."
            }
          ]
        }
      },
      {
        "path": "/sales_proposals/{salesProposalId}",
        "definition": {
          "entityName": "SalesProposal",
          "schema": {
            "$ref": "#/backend/entities/SalesProposal"
          },
          "description": "Stores sales proposal data. Includes denormalized 'clientId' for authorization independence.",
          "params": [
            {
              "name": "salesProposalId",
              "description": "The unique identifier of the sales proposal."
            }
          ]
        }
      },
       {
        "path": "/sales_orders/{salesOrderId}",
        "definition": {
          "entityName": "SalesOrder",
          "schema": {
            "$ref": "#/backend/entities/SalesOrder"
          },
          "description": "Stores sales order data.",
          "params": [
            {
              "name": "salesOrderId",
              "description": "The unique identifier of the sales order."
            }
          ]
        }
      },
      {
        "path": "/commissions/{commissionId}",
        "definition": {
          "entityName": "Commission",
          "schema": {
            "$ref": "#/backend/entities/Commission"
          },
          "description": "Stores commission data.",
          "params": [
            {
              "name": "commissionId",
              "description": "The unique identifier of the commission."
            }
          ]
        }
      },
      {
        "path": "/quizzes/{quizId}",
        "definition": {
          "entityName": "Quiz",
          "schema": {
            "$ref": "#/backend/entities/Quiz"
          },
          "description": "Stores quiz data.",
          "params": [
            {
              "name": "quizId",
              "description": "The unique identifier of the quiz."
            }
          ]
        }
      },
      {
        "path": "/questions/{questionId}",
        "definition": {
          "entityName": "Question",
          "schema": {
            "$ref": "#/backend/entities/Question"
          },
          "description": "Stores question data.",
          "params": [
            {
              "name": "questionId",
              "description": "The unique identifier of the question."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore data structure is designed to support the ConsorciaTech application, focusing on authorization independence, clarity, and scalability. It addresses the 'Missing or insufficient permissions' error by structuring data with clear ownership and access control. The structure separates concerns into collections like `users`, `clients`, `financial_institutions`, `products` (split into `consortiums` and `credit_products`), `product_combos`, `sales_proposals`, `commissions`, `quizzes`, and `questions`. Importantly, to achieve Authorization Independence (CRITICAL), data is denormalized where needed to avoid `get()` calls in security rules.  For example, the `clientId` is denormalized within `sales_proposals` to grant access for the specific client. The structure supports required QAPs by using segregation and path-based ownership, providing secure `list` operations."
  }
}

  