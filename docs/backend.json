{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user in the ConsorciaTech system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "firstName": {
          "type": "string",
          "description": "The user's first name."
        },
        "lastName": {
          "type": "string",
          "description": "The user's last name."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "The user's phone number."
        },
        "role": {
          "type": "string",
          "description": "The user's role (e.g., Admin, Gestor, Atendente, Financeiro)."
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "email",
        "phone",
        "role"
      ]
    },
    "Client": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Client",
      "type": "object",
      "description": "Represents a client in the ConsorciaTech system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Client entity."
        },
        "firstName": {
          "type": "string",
          "description": "The client's first name."
        },
        "lastName": {
          "type": "string",
          "description": "The client's last name."
        },
        "email": {
          "type": "string",
          "description": "The client's email address.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "The client's phone number."
        },
        "quizLink": {
          "type": "string",
          "description": "Unique link for the client to fill out the quiz."
        },
        "status": {
          "type": "string",
          "description": "The client's status (e.g., New, In Analysis, Pending, Approved, Rejected)."
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "email",
        "phone",
        "quizLink",
        "status"
      ]
    },
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a product (Consórcio or Crédito) in the ConsorciaTech system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Product entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the product."
        },
        "type": {
          "type": "string",
          "description": "The type of product (e.g., Consórcio, Crédito)."
        },
        "rate": {
          "type": "number",
          "description": "The interest rate for the product."
        },
        "term": {
          "type": "number",
          "description": "The term (in months) for the product."
        },
        "minValue": {
          "type": "number",
          "description": "The minimum value for the product."
        },
        "maxValue": {
          "type": "number",
          "description": "The maximum value for the product."
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "rate",
        "term",
        "minValue",
        "maxValue"
      ]
    },
    "Bank": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Bank",
      "type": "object",
      "description": "Represents a bank or financial institution in the ConsorciaTech system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Bank entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the bank."
        },
        "commission": {
          "type": "number",
          "description": "The commission percentage for the bank."
        }
      },
      "required": [
        "id",
        "name",
        "commission"
      ]
    },
    "Sale": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Sale",
      "type": "object",
      "description": "Represents a sale or proposal in the ConsorciaTech system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Sale entity."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to Client. (Relationship: Client 1:N Sale)"
        },
        "productId": {
          "type": "string",
          "description": "Reference to Product. (Relationship: Product 1:N Sale)"
        },
        "bankId": {
          "type": "string",
          "description": "Reference to Bank. (Relationship: Bank 1:N Sale)"
        },
        "date": {
          "type": "string",
          "description": "The date of the sale.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "The status of the sale (e.g., Open, In Negotiation, Finalized, Cancelled)."
        },
        "contract": {
          "type": "string",
          "description": "The contract document (e.g., PDF)."
        }
      },
      "required": [
        "id",
        "clientId",
        "productId",
        "bankId",
        "date",
        "status",
        "contract"
      ]
    },
    "QuizQuestion": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QuizQuestion",
      "type": "object",
      "description": "Represents a question in the client quiz.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the QuizQuestion entity."
        },
        "text": {
          "type": "string",
          "description": "The text of the question."
        },
        "type": {
          "type": "string",
          "description": "The type of question (e.g., multiple choice, text, file upload)."
        },
        "order": {
          "type": "number",
          "description": "The order of the question in the quiz."
        },
        "required": {
          "type": "boolean",
          "description": "Indicates if the question is required."
        }
      },
      "required": [
        "id",
        "text",
        "type",
        "order",
        "required"
      ]
    },
    "QuizAnswer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QuizAnswer",
      "type": "object",
      "description": "Represents an answer to a quiz question provided by a client.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the QuizAnswer entity."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to Client. (Relationship: Client 1:N QuizAnswer)"
        },
        "questionId": {
          "type": "string",
          "description": "Reference to QuizQuestion. (Relationship: QuizQuestion 1:N QuizAnswer)"
        },
        "answer": {
          "type": "string",
          "description": "The client's answer to the question."
        }
      },
      "required": [
        "id",
        "clientId",
        "questionId",
        "answer"
      ]
    },
    "Document": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Document",
      "type": "object",
      "description": "Represents a document uploaded by a client.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Document entity."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to Client. (Relationship: Client 1:N Document)"
        },
        "type": {
          "type": "string",
          "description": "The type of document (e.g., RG, CNH, proof of income, proof of residence)."
        },
        "url": {
          "type": "string",
          "description": "The URL of the uploaded document."
        }
      },
      "required": [
        "id",
        "clientId",
        "type",
        "url"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. Uses path-based ownership for security.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/clients/{clientId}",
        "definition": {
          "entityName": "Client",
          "schema": {
            "$ref": "#/backend/entities/Client"
          },
          "description": "Stores client profiles.",
          "params": [
            {
              "name": "clientId",
              "description": "The unique identifier of the client."
            }
          ]
        }
      },
      {
        "path": "/clients/{clientId}/documents/{documentId}",
        "definition": {
          "entityName": "Document",
          "schema": {
            "$ref": "#/backend/entities/Document"
          },
          "description": "Stores documents uploaded by the client. Includes denormalized 'clientId' for authorization independence.",
          "params": [
            {
              "name": "clientId",
              "description": "The unique identifier of the client."
            },
            {
              "name": "documentId",
              "description": "The unique identifier of the document."
            }
          ]
        }
      },
      {
        "path": "/clients/{clientId}/quizAnswers/{quizAnswerId}",
        "definition": {
          "entityName": "QuizAnswer",
          "schema": {
            "$ref": "#/backend/entities/QuizAnswer"
          },
          "description": "Stores answers to quiz questions provided by the client. Includes denormalized 'clientId' for authorization independence.",
          "params": [
            {
              "name": "clientId",
              "description": "The unique identifier of the client."
            },
            {
              "name": "quizAnswerId",
              "description": "The unique identifier of the quiz answer."
            }
          ]
        }
      },
      {
        "path": "/products/{productId}",
        "definition": {
          "entityName": "Product",
          "schema": {
            "$ref": "#/backend/entities/Product"
          },
          "description": "Stores product information (Consórcio and Crédito).",
          "params": [
            {
              "name": "productId",
              "description": "The unique identifier of the product."
            }
          ]
        }
      },
      {
        "path": "/banks/{bankId}",
        "definition": {
          "entityName": "Bank",
          "schema": {
            "$ref": "#/backend/entities/Bank"
          },
          "description": "Stores bank or financial institution information.",
          "params": [
            {
              "name": "bankId",
              "description": "The unique identifier of the bank."
            }
          ]
        }
      },
      {
        "path": "/sales/{saleId}",
        "definition": {
          "entityName": "Sale",
          "schema": {
            "$ref": "#/backend/entities/Sale"
          },
          "description": "Stores sales or proposal information.",
          "params": [
            {
              "name": "saleId",
              "description": "The unique identifier of the sale."
            }
          ]
        }
      },
      {
        "path": "/quizQuestions/{quizQuestionId}",
        "definition": {
          "entityName": "QuizQuestion",
          "schema": {
            "$ref": "#/backend/entities/QuizQuestion"
          },
          "description": "Stores quiz questions.",
          "params": [
            {
              "name": "quizQuestionId",
              "description": "The unique identifier of the quiz question."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure authorization independence and QAP support by adhering to the core design principles and strategy mandates. Authorization independence is achieved through denormalization, specifically within the `clients/{clientId}/documents` and `clients/{clientId}/quizAnswers` subcollections, by implicitly tying them to their respective client documents and thus inheriting the client's security context without requiring `get()` calls in the security rules. Structural Segregation separates different data types into distinct collections, such as `/users`, `/clients`, `/products`, `/banks`, `/sales`, and `/quizQuestions`, with appropriate subcollections to maintain homogeneous security postures. Access modeling is standardized using path-based ownership for user-related data (`/users/{userId}`) and 1:N relationships (e.g., `/clients/{clientId}/sales/{saleId}`).\n\nFor QAPs (Rules are not Filters): The structure facilitates secure `list` operations by avoiding mixing data with different access requirements within the same collection. For instance, clients and related information are stored under `/clients/{clientId}`, allowing listing clients based on user roles (Admin, Gestor, etc.) without filtering based on document content.  Quiz answers and documents are stored as subcollections of the client, avoiding the need to filter based on client information during listing. This structure prevents exposing data that the user should not have access to.\n\nThe `Document` and `QuizAnswer` entities include a `clientId` field that references the Client. This ensures that documents and quiz answers can only be accessed in the context of a specific client, maintaining data integrity and security.  Furthermore, the structure supports the integrity of ownership, timestamps, and denormalized data by keeping all relevant data (client information, documents, answers) linked through explicit document relationships and paths."
  }
}