/**
 * @file Firebase Security Rules for Consórcio e Crédito System
 *
 * @Core Philosophy:
 * The ruleset prioritizes ease of development by relaxing schema enforcement while strictly controlling access.
 * It focuses on authorizing actions based on user roles and relationships within the data model.
 * Read access to Quizzes is open to all users, including unauthenticated users, to allow for easy access to quizzes.
 *
 * @Data Structure:
 * - /clients/{clientId}: Stores client information.
 * - /quizzes/{quizId}: Stores quiz data.
 * - /products/{productId}: Stores product information.
 * - /banks/{bankId}: Stores bank information.
 * - /sales/{saleId}: Stores sale information.
 * - /commissions/{commissionId}: Stores commission information.
 * - /users/{userId}: Stores user information.
 * - /clients/{clientId}/documents/{documentId}: Stores documents uploaded by a client.
 * - /salesPeople/{salesPersonId}: Stores salesperson information.
 *
 * @Key Security Decisions:
 * - Read access is allowed for all quizzes.
 * - No listing is enforced on any collections.
 * - Data validation is minimal, focusing on authorization-critical fields.
 * - All write operations are allowed for authenticated users.
 *
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to client data.
     * @path /clients/{clientId}
     * @allow (create, update, delete) - Any authenticated user can manage client data.
     * @allow (get, list) - Any authenticated user can read client data.
     * @deny (create, update, delete) - No write access for unauthenticated users.
     * @principle Allows any authenticated user to manage and read client data for faster development.
     */
    match /clients/{clientId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Controls access to quiz data.
     * @path /quizzes/{quizId}
     * @allow (get, list) - Anyone can read quizzes.
     * @allow (create, update, delete) - Any authenticated user can manage quiz data.
     * @deny (create, update, delete) - No write access for unauthenticated users.
     * @principle Allows anyone to read quiz data and any signed in user to write.
     */
    match /quizzes/{quizId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Controls access to product information.
     * @path /products/{productId}
     * @allow (create, update, delete) - Any authenticated user can manage product data.
     * @allow (get, list) - Any authenticated user can read product data.
     * @deny (create, update, delete) - No write access for unauthenticated users.
     * @principle Allows any authenticated user to manage and read product data for faster development.
     */
    match /products/{productId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Controls access to bank information.
     * @path /banks/{bankId}
     * @allow (create, update, delete) - Any authenticated user can manage bank data.
     * @allow (get, list) - Any authenticated user can read bank data.
     * @deny (create, update, delete) - No write access for unauthenticated users.
     * @principle Allows any authenticated user to manage and read bank data for faster development.
     */
    match /banks/{bankId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Controls access to sales information.
     * @path /sales/{saleId}
     * @allow (create, update, delete) - Any authenticated user can manage sales data.
     * @allow (get, list) - Any authenticated user can read sales data.
     * @deny (create, update, delete) - No write access for unauthenticated users.
     * @principle Allows any authenticated user to manage and read sales data for faster development.
     */
    match /sales/{saleId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Controls access to commission information.
     * @path /commissions/{commissionId}
     * @allow (create, update, delete) - Any authenticated user can manage commission data.
     * @allow (get, list) - Any authenticated user can read commission data.
     * @deny (create, update, delete) - No write access for unauthenticated users.
     * @principle Allows any authenticated user to manage and read commission data for faster development.
     */
    match /commissions/{commissionId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Controls access to user data.
     * @path /users/{userId}
     * @allow (create, update, delete) - Any authenticated user can manage user data.
     * @allow (get, list) - Any authenticated user can read user data.
     * @deny (create, update, delete) - No write access for unauthenticated users.
     * @principle Allows any authenticated user to manage and read user data for faster development.
     */
    match /users/{userId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Controls access to documents uploaded by a client.
     * @path /clients/{clientId}/documents/{documentId}
     * @allow (create, update, delete) - Any authenticated user can manage client documents.
     * @allow (get, list) - Any authenticated user can read client documents.
     * @deny (create, update, delete) - No write access for unauthenticated users.
     * @principle Allows any authenticated user to manage and read client documents for faster development.
     */
    match /clients/{clientId}/documents/{documentId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Controls access to sales person data.
     * @path /salesPeople/{salesPersonId}
     * @allow (create, update, delete) - Any authenticated user can manage sales person data.
     * @allow (get, list) - Any authenticated user can read sales person data.
     * @deny (create, update, delete) - No write access for unauthenticated users.
     * @principle Allows any authenticated user to manage and read sales person data for faster development.
     */
    match /salesPeople/{salesPersonId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}