/**
 * @fileoverview Firestore Security Rules for ConsorciaTech application.
 *
 * Core Philosophy:
 * This ruleset grants authenticated users full access to the Firestore database.
 *
 * Data Structure:
 * - /users/{userId}: Stores user data.
 * - /roles_admin/{userId}: Document existence determines admin role.
 * - /clients/{clientId}: Stores client information.
 * - /clients/{clientId}/documents/{documentId}: Stores documents uploaded by clients.
 * - /financial_institutions/{financialInstitutionId}: Stores financial institution data.
 * - /consortiums/{consortiumId}: Stores consortium product data.
 * - /credit_products/{creditProductId}: Stores credit product data.
 * - /product_combos/{productComboId}: Stores product combo data.
 * - /sales_proposals/{salesProposalId}: Stores sales proposal data. Includes denormalized 'clientId' for authorization independence.
 * - /commissions/{commissionId}: Stores commission data.
 * - /quizzes/{quizId}: Stores quiz data.
 * - /questions/{questionId}: Stores question data.
 *
 * Key Security Decisions:
 * - Authenticated users have full read and write access to all collections.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Grants authenticated users full access to user data.
     * @path /users/{userId}
     * @allow (create) - Authenticated user can create a user document.
     * @allow (get) - Authenticated user can read a user document.
     * @deny (create) - Unauthenticated user cannot create a user document.
     * @principle Allows any authenticated user to read and write user data.
     */
    match /users/{userId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to admin roles.
     * @path /roles_admin/{userId}
     * @allow (create) - Authenticated user can create an admin role document.
     * @allow (get) - Authenticated user can read an admin role document.
     * @deny (create) - Unauthenticated user cannot create an admin role document.
     * @principle Allows any authenticated user to manage admin roles.
     */
    match /roles_admin/{userId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to client data.
     * @path /clients/{clientId}
     * @allow (create) - Authenticated user can create a client document.
     * @allow (get) - Authenticated user can read a client document.
     * @deny (create) - Unauthenticated user cannot create a client document.
     * @principle Allows any authenticated user to manage client data.
     */
    match /clients/{clientId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to client documents.
     * @path /clients/{clientId}/documents/{documentId}
     * @allow (create) - Authenticated user can create a client document.
     * @allow (get) - Authenticated user can read a client document.
     * @deny (create) - Unauthenticated user cannot create a client document.
     * @principle Allows any authenticated user to manage client documents.
     */
    match /clients/{clientId}/documents/{documentId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to financial institution data.
     * @path /financial_institutions/{financialInstitutionId}
     * @allow (create) - Authenticated user can create a financial institution document.
     * @allow (get) - Authenticated user can read a financial institution document.
     * @deny (create) - Unauthenticated user cannot create a financial institution document.
     * @principle Allows any authenticated user to manage financial institution data.
     */
    match /financial_institutions/{financialInstitutionId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to consortium data.
     * @path /consortiums/{consortiumId}
     * @allow (create) - Authenticated user can create a consortium document.
     * @allow (get) - Authenticated user can read a consortium document.
     * @deny (create) - Unauthenticated user cannot create a consortium document.
     * @principle Allows any authenticated user to manage consortium data.
     */
    match /consortiums/{consortiumId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to credit product data.
     * @path /credit_products/{creditProductId}
     * @allow (create) - Authenticated user can create a credit product document.
     * @allow (get) - Authenticated user can read a credit product document.
     * @deny (create) - Unauthenticated user cannot create a credit product document.
     * @principle Allows any authenticated user to manage credit product data.
     */
    match /credit_products/{creditProductId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to product combo data.
     * @path /product_combos/{productComboId}
     * @allow (create) - Authenticated user can create a product combo document.
     * @allow (get) - Authenticated user can read a product combo document.
     * @deny (create) - Unauthenticated user cannot create a product combo document.
     * @principle Allows any authenticated user to manage product combo data.
     */
    match /product_combos/{productComboId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to sales proposal data.
     * @path /sales_proposals/{salesProposalId}
     * @allow (create) - Authenticated user can create a sales proposal document.
     * @allow (get) - Authenticated user can read a sales proposal document.
     * @deny (create) - Unauthenticated user cannot create a sales proposal document.
     * @principle Allows any authenticated user to manage sales proposal data.
     */
    match /sales_proposals/{salesProposalId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to commission data.
     * @path /commissions/{commissionId}
     * @allow (create) - Authenticated user can create a commission document.
     * @allow (get) - Authenticated user can read a commission document.
     * @deny (create) - Unauthenticated user cannot create a commission document.
     * @principle Allows any authenticated user to manage commission data.
     */
    match /commissions/{commissionId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to quiz data.
     * @path /quizzes/{quizId}
     * @allow (create) - Authenticated user can create a quiz document.
     * @allow (get) - Authenticated user can read a quiz document.
     * @deny (create) - Unauthenticated user cannot create a quiz document.
     * @principle Allows any authenticated user to manage quiz data.
     */
    match /quizzes/{quizId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to question data.
     * @path /questions/{questionId}
     * @allow (create) - Authenticated user can create a question document.
     * @allow (get) - Authenticated user can read a question document.
     * @deny (create) - Unauthenticated user cannot create a question document.
     * @principle Allows any authenticated user to manage question data.
     */
    match /questions/{questionId} {
      allow read, write: if isSignedIn();
    }
  }
}