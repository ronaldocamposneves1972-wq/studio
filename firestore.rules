/**
 * @fileoverview Firestore Security Rules for ConsorciaTech.
 *
 * Core Philosophy:
 * This ruleset prioritizes ease of access across the board, with no authorization checks.
 *
 * Data Structure:
 * The database is organized into top-level collections for various entities like users, clients,
 * financial institutions, products (consortiums, credit products), product combos, sales proposals,
 * commissions, quizzes, and questions.
 *
 * Key Security Decisions:
 * - All data is publicly readable and writable. This is intended for prototyping only and is NOT
 *   suitable for production.
 * - No data validation is performed.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows any user to read and write user data.
     * @path /users/{userId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny None.
     * @principle Open access for prototyping.
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write admin roles.
     * @path /roles_admin/{userId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny None.
     * @principle Open access for prototyping.
     */
    match /roles_admin/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write client data.
     * @path /clients/{clientId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny None.
     * @principle Open access for prototyping.
     */
    match /clients/{clientId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write client documents.
     * @path /clients/{clientId}/documents/{documentId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny None.
     * @principle Open access for prototyping.
     */
    match /clients/{clientId}/documents/{documentId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write financial institution data.
     * @path /financial_institutions/{financialInstitutionId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny None.
     * @principle Open access for prototyping.
     */
    match /financial_institutions/{financialInstitutionId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write consortium data.
     * @path /consortiums/{consortiumId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny None.
     * @principle Open access for prototyping.
     */
    match /consortiums/{consortiumId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write credit product data.
     * @path /credit_products/{creditProductId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny None.
     * @principle Open access for prototyping.
     */
    match /credit_products/{creditProductId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write product combo data.
     * @path /product_combos/{productComboId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny None.
     * @principle Open access for prototyping.
     */
    match /product_combos/{productComboId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write sales proposal data.
     * @path /sales_proposals/{salesProposalId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny None.
     * @principle Open access for prototyping.
     */
    match /sales_proposals/{salesProposalId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write commission data.
     * @path /commissions/{commissionId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny None.
     * @principle Open access for prototyping.
     */
    match /commissions/{commissionId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write quiz data.
     * @path /quizzes/{quizId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny None.
     * @principle Open access for prototyping.
     */
    match /quizzes/{quizId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write question data.
     * @path /questions/{questionId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny None.
     * @principle Open access for prototyping.
     */
    match /questions/{questionId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}