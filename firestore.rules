/**
 * @fileoverview Firestore Security Rules for ConsorciaTech.
 *
 * Core Philosophy:
 * This ruleset grants authenticated users master permissions to all data, effectively bypassing granular access controls.
 *
 * Data Structure:
 * The Firestore database is organized into top-level collections for various entities, including `users`, `clients`, `financial_institutions`, `consortiums`, `credit_products`, `product_combos`, `sales_proposals`, `commissions`, `quizzes`, and `questions`.  Client-owned documents are nested under the `/clients/{clientId}` path.
 *
 * Key Security Decisions:
 * - Authenticated users have full read and write access to all collections.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants authenticated users full access to user data.
     * @path /users/{userId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No requests are explicitly denied.
     * @principle Grants all permissions to authenticated users
     */
    match /users/{userId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to admin role data.
     * @path /roles_admin/{userId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No requests are explicitly denied.
     * @principle Grants all permissions to authenticated users
     */
    match /roles_admin/{userId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to client data.
     * @path /clients/{clientId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No requests are explicitly denied.
     * @principle Grants all permissions to authenticated users
     */
    match /clients/{clientId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to client document data.
     * @path /clients/{clientId}/documents/{documentId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No requests are explicitly denied.
     * @principle Grants all permissions to authenticated users
     */
    match /clients/{clientId}/documents/{documentId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to financial institution data.
     * @path /financial_institutions/{financialInstitutionId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No requests are explicitly denied.
     * @principle Grants all permissions to authenticated users
     */
    match /financial_institutions/{financialInstitutionId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to consortium data.
     * @path /consortiums/{consortiumId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No requests are explicitly denied.
     * @principle Grants all permissions to authenticated users
     */
    match /consortiums/{consortiumId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to credit product data.
     * @path /credit_products/{creditProductId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No requests are explicitly denied.
     * @principle Grants all permissions to authenticated users
     */
    match /credit_products/{creditProductId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to product combo data.
     * @path /product_combos/{productComboId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No requests are explicitly denied.
     * @principle Grants all permissions to authenticated users
     */
    match /product_combos/{productComboId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to sales proposal data.
     * @path /sales_proposals/{salesProposalId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No requests are explicitly denied.
     * @principle Grants all permissions to authenticated users
     */
    match /sales_proposals/{salesProposalId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to commission data.
     * @path /commissions/{commissionId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No requests are explicitly denied.
     * @principle Grants all permissions to authenticated users
     */
    match /commissions/{commissionId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to quiz data.
     * @path /quizzes/{quizId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No requests are explicitly denied.
     * @principle Grants all permissions to authenticated users
     */
    match /quizzes/{quizId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to question data.
     * @path /questions/{questionId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No requests are explicitly denied.
     * @principle Grants all permissions to authenticated users
     */
    match /questions/{questionId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}