/**
 * @fileoverview Firestore Security Rules for ConsorciaTech
 *
 * Core Philosophy:
 * This ruleset provides authenticated users with full access to the database. No authorization checks are performed. This setup is intended for rapid prototyping and should be replaced with a more restrictive ruleset before production.
 *
 * Data Structure:
 * The database is organized into top-level collections such as `users`, `clients`, `financial_institutions`, `consortiums`, `credit_products`, `product_combos`, `sales_proposals`, `commissions`, `quizzes`, and `questions`.
 * Subcollections are used to nest data, such as `documents` under `clients`.
 *
 * Key Security Decisions:
 * - All authenticated users have read and write access to all data.
 *
 * WARNING: This ruleset is insecure and should only be used for prototyping.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Allows authenticated users to read and write user data.
     * @path /users/{userId}
     * @allow (create) - Any authenticated user can create a user document.
     * @allow (get, list, update, delete) - Any authenticated user can read, list, update, or delete user documents.
     * @deny (none) - No requests are denied.
     * @principle Allows all authenticated users to perform any operation.
     */
    match /users/{userId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write admin role data.
     * @path /roles_admin/{userId}
     * @allow (create) - Any authenticated user can create an admin role document.
     * @allow (get, list, update, delete) - Any authenticated user can read, list, update, or delete admin role documents.
     * @deny (none) - No requests are denied.
     * @principle Allows all authenticated users to perform any operation.
     */
    match /roles_admin/{userId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write client data.
     * @path /clients/{clientId}
     * @allow (create) - Any authenticated user can create a client document.
     * @allow (get, list, update, delete) - Any authenticated user can read, list, update, or delete client documents.
     * @deny (none) - No requests are denied.
     * @principle Allows all authenticated users to perform any operation.
     */
    match /clients/{clientId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write client document data.
     * @path /clients/{clientId}/documents/{documentId}
     * @allow (create) - Any authenticated user can create a client document.
     * @allow (get, list, update, delete) - Any authenticated user can read, list, update, or delete client documents.
     * @deny (none) - No requests are denied.
     * @principle Allows all authenticated users to perform any operation.
     */
    match /clients/{clientId}/documents/{documentId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write financial institution data.
     * @path /financial_institutions/{financialInstitutionId}
     * @allow (create) - Any authenticated user can create a financial institution document.
     * @allow (get, list, update, delete) - Any authenticated user can read, list, update, or delete financial institution documents.
     * @deny (none) - No requests are denied.
     * @principle Allows all authenticated users to perform any operation.
     */
    match /financial_institutions/{financialInstitutionId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write consortium data.
     * @path /consortiums/{consortiumId}
     * @allow (create) - Any authenticated user can create a consortium document.
     * @allow (get, list, update, delete) - Any authenticated user can read, list, update, or delete consortium documents.
     * @deny (none) - No requests are denied.
     * @principle Allows all authenticated users to perform any operation.
     */
    match /consortiums/{consortiumId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write credit product data.
     * @path /credit_products/{creditProductId}
     * @allow (create) - Any authenticated user can create a credit product document.
     * @allow (get, list, update, delete) - Any authenticated user can read, list, update, or delete credit product documents.
     * @deny (none) - No requests are denied.
     * @principle Allows all authenticated users to perform any operation.
     */
    match /credit_products/{creditProductId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write product combo data.
     * @path /product_combos/{productComboId}
     * @allow (create) - Any authenticated user can create a product combo document.
     * @allow (get, list, update, delete) - Any authenticated user can read, list, update, or delete product combo documents.
     * @deny (none) - No requests are denied.
     * @principle Allows all authenticated users to perform any operation.
     */
    match /product_combos/{productComboId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write sales proposal data.
     * @path /sales_proposals/{salesProposalId}
     * @allow (create) - Any authenticated user can create a sales proposal document.
     * @allow (get, list, update, delete) - Any authenticated user can read, list, update, or delete sales proposal documents.
     * @deny (none) - No requests are denied.
     * @principle Allows all authenticated users to perform any operation.
     */
    match /sales_proposals/{salesProposalId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write commission data.
     * @path /commissions/{commissionId}
     * @allow (create) - Any authenticated user can create a commission document.
     * @allow (get, list, update, delete) - Any authenticated user can read, list, update, or delete commission documents.
     * @deny (none) - No requests are denied.
     * @principle Allows all authenticated users to perform any operation.
     */
    match /commissions/{commissionId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write quiz data.
     * @path /quizzes/{quizId}
     * @allow (create) - Any authenticated user can create a quiz document.
     * @allow (get, list, update, delete) - Any authenticated user can read, list, update, or delete quiz documents.
     * @deny (none) - No requests are denied.
     * @principle Allows all authenticated users to perform any operation.
     */
    match /quizzes/{quizId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write question data.
     * @path /questions/{questionId}
     * @allow (create) - Any authenticated user can create a question document.
     * @allow (get, list, update, delete) - Any authenticated user can read, list, update, or delete question documents.
     * @deny (none) - No requests are denied.
     * @principle Allows all authenticated users to perform any operation.
     */
    match /questions/{questionId} {
      allow read, write: if isSignedIn();
    }
  }
}