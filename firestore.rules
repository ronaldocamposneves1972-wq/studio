/**
 * @file Firestore Security Rules
 * @description This ruleset allows authenticated users to read and write to all collections.
 * Unauthenticated users can only create documents in the `clients` collection and read documents in the `quizzes` collection.
 *
 * Data Structure:
 * - Top-level collections: accounts, clients, cost_centers, expense_categories, financial_institutions,
 *   product_types, products, quizzes, sales_orders, sales_proposals, settings, suppliers, transactions, users
 *
 * Key Security Decisions:
 * - Authenticated users have full access to all collections.
 * - Unauthenticated users can create clients.
 * - Unauthenticated users can read quizzes.
 * - No data shape validation is performed in this prototyping phase.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows authenticated users to read and write accounts.
     * @path /accounts/{accountId}
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write) - Unauthenticated user cannot access.
     * @principle Authenticated users have full access.
     */
    match /accounts/{accountId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write clients. Unauthenticated users can only create clients.
     * @path /clients/{clientId}
     * @allow (create) - Unauthenticated user can create a client.
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write, delete) - Unauthenticated user cannot read, update or delete.
     * @principle Authenticated users have full access, unauthenticated users can create clients.
     */
    match /clients/{clientId} {
      allow create: if request.auth == null;
      allow read, write, delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write cost_centers.
     * @path /cost_centers/{costCenterId}
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write) - Unauthenticated user cannot access.
     * @principle Authenticated users have full access.
     */
    match /cost_centers/{costCenterId} {
      allow read, write, delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write expense_categories.
     * @path /expense_categories/{expenseCategoryId}
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write) - Unauthenticated user cannot access.
     * @principle Authenticated users have full access.
     */
    match /expense_categories/{expenseCategoryId} {
      allow read, write, delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write financial_institutions.
     * @path /financial_institutions/{financialInstitutionId}
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write) - Unauthenticated user cannot access.
     * @principle Authenticated users have full access.
     */
    match /financial_institutions/{financialInstitutionId} {
      allow read, write, delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write product_types.
     * @path /product_types/{productTypeId}
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write) - Unauthenticated user cannot access.
     * @principle Authenticated users have full access.
     */
    match /product_types/{productTypeId} {
      allow read, write, delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write products.
     * @path /products/{productId}
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write) - Unauthenticated user cannot access.
     * @principle Authenticated users have full access.
     */
    match /products/{productId} {
      allow read, write, delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write quizzes. Unauthenticated users can only read quizzes.
     * @path /quizzes/{quizId}
     * @allow (read) - Authenticated and unauthenticated users can read.
     * @allow (write) - Authenticated user can write.
     * @deny (write) - Unauthenticated user cannot write.
     * @principle Authenticated users have full access, unauthenticated users can read quizzes.
     */
    match /quizzes/{quizId} {
      allow read: if true;
      allow write, delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write sales_orders.
     * @path /sales_orders/{salesOrderId}
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write) - Unauthenticated user cannot access.
     * @principle Authenticated users have full access.
     */
    match /sales_orders/{salesOrderId} {
      allow read, write, delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write sales_proposals.
     * @path /sales_proposals/{salesProposalId}
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write) - Unauthenticated user cannot access.
     * @principle Authenticated users have full access.
     */
    match /sales_proposals/{salesProposalId} {
      allow read, write, delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write settings.
     * @path /settings/{settingId}
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write) - Unauthenticated user cannot access.
     * @principle Authenticated users have full access.
     */
    match /settings/{settingId} {
      allow read, write, delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write suppliers.
     * @path /suppliers/{supplierId}
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write) - Unauthenticated user cannot access.
     * @principle Authenticated users have full access.
     */
    match /suppliers/{supplierId} {
      allow read, write, delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write transactions.
     * @path /transactions/{transactionId}
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write) - Unauthenticated user cannot access.
     * @principle Authenticated users have full access.
     */
    match /transactions/{transactionId} {
      allow read, write, delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write users.
     * @path /users/{userId}
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write) - Unauthenticated user cannot access.
     * @principle Authenticated users have full access.
     */
    match /users/{userId} {
      allow read, write, delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read and write documents under a client.
     * @path /clients/{clientId}/documents/{documentId}
     * @allow (read, write) - Authenticated user can access.
     * @deny (read, write) - Unauthenticated user cannot access.
     * @principle Authenticated users have full access.
     */
    match /clients/{clientId}/documents/{documentId} {
      allow read, write, delete: if isSignedIn();
    }
  }

  function isSignedIn() {
    return request.auth != null;
  }
}