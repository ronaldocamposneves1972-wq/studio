/**
 * @fileoverview Firestore Security Rules for ConsorciaTech.
 *
 * Core Philosophy:
 * This ruleset grants full access (read and write) to all authenticated users across all database collections.
 * This is intended for rapid prototyping and should NOT be used in a production environment.
 *
 * Data Structure:
 * The database includes collections for users, clients, financial institutions,
 * consortiums, credit products, product combos, sales proposals, commissions, quizzes, and questions.
 * Documents related to a specific entity are stored within collections named after the entity.
 *
 * Key Security Decisions:
 * - All authenticated users have full access (read/write) to all collections.
 * - No restrictions are placed on data shapes or content.
 * - This ruleset prioritizes ease of use over strict security for initial prototyping.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Grants full access to all authenticated users for user data.
     * @path /users/{userId}
     * @allow (create, update, delete, get, list) - Any authenticated user.
     * @deny (create, update, delete) - If user is not authenticated.
     * @principle Allows any authenticated user to read and write user data.
     */
    match /users/{userId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to all authenticated users for admin roles.
     * @path /roles_admin/{userId}
     * @allow (create, update, delete, get, list) - Any authenticated user.
     * @deny (create, update, delete) - If user is not authenticated.
     * @principle Allows any authenticated user to read and write admin role data.
     */
    match /roles_admin/{userId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to all authenticated users for client data.
     * @path /clients/{clientId}
     * @allow (create, update, delete, get, list) - Any authenticated user.
     * @deny (create, update, delete) - If user is not authenticated.
     * @principle Allows any authenticated user to read and write client data.
     */
    match /clients/{clientId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to all authenticated users for client documents.
     * @path /clients/{clientId}/documents/{documentId}
     * @allow (create, update, delete, get, list) - Any authenticated user.
     * @deny (create, update, delete) - If user is not authenticated.
     * @principle Allows any authenticated user to read and write client document data.
     */
    match /clients/{clientId}/documents/{documentId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to all authenticated users for financial institution data.
     * @path /financial_institutions/{financialInstitutionId}
     * @allow (create, update, delete, get, list) - Any authenticated user.
     * @deny (create, update, delete) - If user is not authenticated.
     * @principle Allows any authenticated user to read and write financial institution data.
     */
    match /financial_institutions/{financialInstitutionId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to all authenticated users for consortium data.
     * @path /consortiums/{consortiumId}
     * @allow (create, update, delete, get, list) - Any authenticated user.
     * @deny (create, update, delete) - If user is not authenticated.
     * @principle Allows any authenticated user to read and write consortium data.
     */
    match /consortiums/{consortiumId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to all authenticated users for credit product data.
     * @path /credit_products/{creditProductId}
     * @allow (create, update, delete, get, list) - Any authenticated user.
     * @deny (create, update, delete) - If user is not authenticated.
     * @principle Allows any authenticated user to read and write credit product data.
     */
    match /credit_products/{creditProductId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to all authenticated users for product combo data.
     * @path /product_combos/{productComboId}
     * @allow (create, update, delete, get, list) - Any authenticated user.
     * @deny (create, update, delete) - If user is not authenticated.
     * @principle Allows any authenticated user to read and write product combo data.
     */
    match /product_combos/{productComboId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to all authenticated users for sales proposal data.
     * @path /sales_proposals/{salesProposalId}
     * @allow (create, update, delete, get, list) - Any authenticated user.
     * @deny (create, update, delete) - If user is not authenticated.
     * @principle Allows any authenticated user to read and write sales proposal data.
     */
    match /sales_proposals/{salesProposalId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to all authenticated users for commission data.
     * @path /commissions/{commissionId}
     * @allow (create, update, delete, get, list) - Any authenticated user.
     * @deny (create, update, delete) - If user is not authenticated.
     * @principle Allows any authenticated user to read and write commission data.
     */
    match /commissions/{commissionId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to all authenticated users for quiz data.
     * @path /quizzes/{quizId}
     * @allow (create, update, delete, get, list) - Any authenticated user.
     * @deny (create, update, delete) - If user is not authenticated.
     * @principle Allows any authenticated user to read and write quiz data.
     */
    match /quizzes/{quizId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to all authenticated users for question data.
     * @path /questions/{questionId}
     * @allow (create, update, delete, get, list) - Any authenticated user.
     * @deny (create, update, delete) - If user is not authenticated.
     * @principle Allows any authenticated user to read and write question data.
     */
    match /questions/{questionId} {
      allow read, write: if isSignedIn();
    }
  }
}